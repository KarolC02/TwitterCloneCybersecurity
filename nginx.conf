user  nginx;
worker_processes  1;

events {
    worker_connections 1024;
}

http {
    # Hide NGINX version
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    sendfile on;

    # Basic Security Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Content-Security-Policy Header
    #
    # Example policy:
    #  - default-src 'self': Everything defaults to same-origin unless otherwise specified
    #  - script-src 'self': Only allow scripts from same origin
    #  - style-src 'self' 'unsafe-inline' https://fonts.googleapis.com:
    #       * 'self' allows local CSS
    #       * 'unsafe-inline' if you have inline <style> or inlined CSS
    #       * google fonts if you rely on them
    #  - font-src 'self' https://fonts.gstatic.com: allow Google font files
    #  - img-src 'self' data: let images come from local or base64 data URIs
    #
    # Adjust the policy as needed for your own external CDNs or inline scripts.
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self';
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com;
        img-src 'self' data:;
        object-src 'none';
        frame-ancestors 'self';
    " always;

    # Upstream to your Flask/Gunicorn container
    upstream flaskapp {
        server odprojekt_app:5000;  # or whatever your Docker service name/port is
    }

    # Redirect all HTTP â†’ HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name _;

        # SSL certificate files (mounted via Docker or placed on host)
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;

        location / {
            proxy_pass http://flaskapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
        }
    }
}
